1.

2.  ignore case
    split on space ' '
    output
      total word count
      results as list
        <word> - count: 0000 (00,00%)

    versions ->
      full text analysis
      @param doc -> 1 document

      text compare top 30
      @param doc, ... -> multiple documents

      text compare no stop words
      @param stopwords -> document with stop words
      @param doc, ... -> 1 or multiple documents

    @update_01
    1 script version
      input parameters
      -i <file>
        input file
      -c <file>
        comparable files
      -s <file>
        stop word file

    @update_02
    @with texteinlesen.py
      2 dim array fuer index von wörtern
      -> sorted(<array) mit index
      -> berechnung relativer häufigkeit durch len(<array>)

3.


A1:
O

A2:
X 2.1 sortierte liste aller wörter mit abs/rel häufigkeit
/ 2.2 30 top words in mehreren Dokumenten vergleichen
       -> für Klassifizierung geeignet? Warum?
/ 2.3 Stopwords eingeben, 2.2 wiederholen

A3:
O 3.1 Zipf-Verteilung anhand der gegebenend Dokumente prüfen
/ 3.2 @plot (normal/doppelt log) häufigkeit zu rang -> Beobachtung
/ 3.3 @plot anzahl wörter zu häufigkeit

A4:
X 4.1 Programm auf Buchstaben umschreiben
X 4.2 Programm auf Buchstaben-Paare umschreiben
O 4.3 Vergleich 2 Dokumente gleiche Sprache
O 4.4 Vergleich 2 Dokumente unterschiedliche Sprache



